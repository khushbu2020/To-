// App.jsx
import React, { useState, useEffect } from 'react';
import './App.css';
import Headpart from './component/Headpart';
import List from './component/List';

function App() {
 
  // const [tasklist, settasklist] = useState(tlist);
   const [tasklist, settasklist] = useState(() => {
    const storedTasks = JSON.parse(localStorage.getItem("task"));
    return storedTasks || []; 
  });

  useEffect(() => {
    localStorage.removeItem("name");
    // console.log(localStorage);
    const list = localStorage.getItem("task");
    if (list) {
      settasklist(JSON.parse(list)); // Parse the JSON string
    }
  }, []);

 
   useEffect(() => {
    localStorage.setItem("task",JSON.stringify(tasklist))
   }, [tasklist]);

  const deletItem = (idx) => {
    const newtasklist = [...tasklist];
    newtasklist.splice(idx, 1);
    settasklist(newtasklist);
  };

  const doneTask = (idx) => {
    const newTaskList = [...tasklist];
    newTaskList[idx].done = !newTaskList[idx].done;
    settasklist(newTaskList);
  };

  const updateTask = (idx, newTask) => {
    const newTasklist = [...tasklist];
    newTasklist[idx].task = newTask;
    newTasklist[idx].Date = new Date();
    setTasklist(newTasklist);
  };
  const addTask = (task) => {
    const newtasklist = [...tasklist];
    newtasklist.unshift({
      task: task,
      Date: new Date()
    });
    settasklist(newtasklist);
  };


  return (
    <>
      <Headpart addTask={addTask} />
      <List tasklist={tasklist} deletItem={deletItem} doneTask={doneTask} updateTask={updateTask} />
    </>
  );
}

export default App;


import React from 'react';

const Todolist = (props) => {
  console.log(props);
    // console.log(props);

    const formatDate = (date) => {
      const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
      return new Date(date).toLocaleDateString(undefined, options);
    };
  return (
    <div>
      <div className={"container w-75 p-5 border p-4 rounded my-3 d-flex gap-3 justify-content-between align-items-center"} style={{height:"3rem",backgroundColor:"#FFF7FC"}}>
       
  <div className={"" + (props.listtask.done ? " text-decoration-line-through" : "")}>
   <h6> {props.listtask.task} </h6>
  </div>
  <div className=" d-flex flex-column">
      <p className=' text-end ' style={{fontSize:".8rem"}}>{formatDate(props.listtask.Date)}</p>
  <div className='d-flex gap-3'>
  <button className="btn btn-outline-dark text-dark "
  style={{backgroundColor:" #EFFFFD"}} onClick={()=>{
    props.doneTask(props.idx)
  }}>
    <i class="fa-solid fa-check"></i>
  </button>
  <button className="btn btn-outline-dark text-dark "
  style={{backgroundColor:"#EFFFFD"}}  onClick={()=>{
    props.updateTask(props.idx)
  }}>
   <i class="fa-solid fa-pen-to-square"></i>
  </button>
  <button className="btn btn-outline-dark text-dark"
  style={{backgroundColor:"#EFFFFD"}}  onClick={()=>{
    props.deletItem(props.idx);
  }}>
   <i class="fa-solid fa-trash"></i>
  </button>
  </div>
  </div>
</div>
    </div>
  );
}

export default Todolist;
